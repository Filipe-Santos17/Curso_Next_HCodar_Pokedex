Resgatando dados dinâmicos / Fetch na Api:
-Por conviniência a função no Next é chamada de getStaticProps
-Utiliz o fetch, assim como no react
-Se utiliza na Página em que os dados seram exibidos
-Renderiza os dados por padrão antes do carregamento da página(Nome: Pré-Rendering)
-O proprio site do Next possui uma api para estudo

ex:/*
    export async function FUNC(){ //Tem que ser na mesma página
        const api = await fetch("url")
        const data = await api.json()
        return (props: {data})
    }
*/


Rotas Dinâmicas: (Aula boa para rever)
-Rotas que são geradas pelo proprio Next
-Para posts, produtos entre outros contéudos que não são conhecidos 
-Por padrão o nome do arquivo é : [id].js (com colchetes)
-Paginas criadas automaticamente, os components são os mesmos, a única diferença é o id e os dados
-Esses valores podem muito bem ser usados em rotas e textos
-Certifique não apenas a logica, mas a estrutura das pastas para garantir que o next funcione

    import {useRouter} from "next/router"
    const router = useRouter(),
    rota = router.query.key do map/id/qualquer variavel //esse valor aparecerar na rota


Rotas Dinâmicas com Dados:
-função getStaticPath para exibir dados nas rotas

    export async function getStaticProps(context){
        const{params}=context
        const data=await fetch(
            "https://jsonplaceholder.typicode.com/todos/${params.todoId)
        )
        const todo = await data.json()
    }

    export async function getStaticPaths(context){
        const response = await fetch("https://jsonplaceholder.typicode.com/todos/))
        const data = await data.json() //todos os dados

        const paths = data.map((todo)=>{
            return{
                params:{
                    todoId: `$(todo.id}`,
                }
            }
        })
        
        return {paths, fallback: false} //fallback é bem complexo, estude mais por fora
        //false = lista estatisca, se tiver novo post não será exibido, true ao contratio
    }


Pagina 404 Customizada:
-Crie o seu proprio arquivo 404.js e customize


Inspecionando o Build de Produção:
-npm run build 
-3 tipos de arquivos são gerados:
-->Server = para o backend
-->Static = apenas HTML
-->SSG = HTML e JSON


---https://www.youtube.com/watch?v=cV3q3OnxmA8&list=TLPQMjUwNTIwMjIFp8An6h4zCg&index=2&ab_channel=CodarMe
---https://www.youtube.com/watch?v=VlZpDr59sjk&list=TLPQMjUwNTIwMjIFp8An6h4zCg&index=3&ab_channel=FullCycle
---https://dev.to/portugues/dark-mode-com-next-js-e-tailwind-3711
---https://www.youtube.com/results?search_query=pokeapi
---https://www.youtube.com/watch?v=amxclbwoSkk&ab_channel=FreeCode
---https://www.youtube.com/watch?v=ArLC05RM9YE&ab_channel=LucasMartins-DevdeRua
---https://www.youtube.com/watch?v=NVWXZ2vBNeU&ab_channel=Gbrottas